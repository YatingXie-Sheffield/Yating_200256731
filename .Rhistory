geom_line(size = 3, aes(color = target)) +
theme_classic() + theme(axis.text.y = element_text(size = 5))
cowplot::plot_grid(p5,p6)
library(tidyverse)
#After sorting out the original data set, a new simplified data set is created for graph drawing
df5 <- df1 %>% select(target,gender,education_level,company_size,experience)
library(ggplot2)
p5 <- ggplot(df1, aes(city_development_index, reorder(city, city_development_index))) +
geom_segment(aes(yend = education_level), xend = 0, color = "grey50") +
geom_point(size = 1, aes(color = gender)) +
theme_classic() + theme(axis.text.y = element_text(size = 2))
p6 <- ggplot(df1, aes(city_development_index, reorder(education_level, city_development_index))) +
geom_segment(aes(yend = education_level), xend = 0, color = "grey50") +
geom_line(size = 3, aes(color = gender)) +
theme_classic() + theme(axis.text.y = element_text(size = 5))
cowplot::plot_grid(p5,p6)
library(tidyverse)
#After sorting out the original data set, a new simplified data set is created for graph drawing
df5 <- df1 %>% select(target,gender,education_level,company_size,experience,training_hours)
library(ggplot2)
p5 <- ggplot(df1, aes(city_development_index, reorder(city, city_development_index))) +
geom_segment(aes(yend = education_level), xend = 0, color = "grey50") +
geom_point(size = 1, aes(color = gender)) +
theme_classic() + theme(axis.text.y = element_text(size = 2))
p6 <- ggplot(df1, aes(city_development_index, reorder(education_level, city_development_index))) +
geom_segment(aes(yend = education_level), xend = 0, color = "grey50") +
geom_line(size = 3, aes(color = gender)) +
theme_classic() + theme(axis.text.y = element_text(size = 5))
cowplot::plot_grid(p5,p6)
ggplot(data = df5, mapping = aes(x = target, y = training_hours, group = 1)) + geom_line()
library(tidyverse)
#After sorting out the original data set, a new simplified data set is created for graph drawing
df5 <- df1 %>% select(target,gender,education_level,company_size,experience,training_hours)
df5.target1 <- df5 %>% filter(target==1)
library(tidyverse)
#After sorting out the original data set, a new simplified data set is created for graph drawing
df5 <- df1 %>% select(target,gender,education_level,company_size,experience,training_hours)
df5.target1 <- df5 %>% filter(target=="1")
library(tidyverse)
#After sorting out the original data set, a new simplified data set is created for graph drawing
df5 <- df1 %>% select(target,gender,education_level,company_size,experience,training_hours)
df5.target1 <- df5 %>% group_by_all(target)
library(tidyverse)
#After sorting out the original data set, a new simplified data set is created for graph drawing
df5 <- df1 %>% select(target,gender,education_level,company_size,experience,training_hours)
df5.target1 <- df5 %>% group_by(target)
library(tidyverse)
#After sorting out the original data set, a new simplified data set is created for graph drawing
df5 <- df1 %>% select(target,gender,education_level,company_size,experience,training_hours)
df5.target1 <- df5 %>% group_by(target) %>%
filter(target==1)
library(tidyverse)
#After sorting out the original data set, a new simplified data set is created for graph drawing
df5 <- df1 %>% select(target,gender,education_level,company_size,experience,training_hours)
df5.target1 <- df5 %>% group_by(target) %>%
filter(target==1)
df5.target0 <- df5 %>% group_by(target) %>%
filter(target==0)
View(df5.target0)
View(df5.target1)
knitr::opts_chunk$set(echo = TRUE,warning = FALSE)
options(tinytex.verbose = TRUE)
```
#Load the installation packages that need to use
library(ggplot2)
library(gridExtra)
library(gganimate)
library(gifski)
library(av)
#make a plot
p1.0 <- ggplot(data=df5.target0, aes(x=education_level, y=training_hours, fill=education_level))
p1 <- p1 + geom_bar(stat="identity", width=0.5, )+ geom_point(color="#f2f2f2",size=1)+
ggtitle('Differences in education level during training time')+
labs(x='Education Level',  y='Training Hours')+
scale_y_continuous(limits = c(0,350), breaks = seq(0,350,by=50))+
scale_fill_manual(values=c("Graduate"="#d66d75","Masters"="#ee9ca7","Phd"="#ffdde1"))+
theme_bw()+theme(panel.grid=element_blank(),panel.border=element_blank(),axis.line=element_line(size=1,colour="black"))
p1.1 <- ggplot(data=df5.target1, aes(x=education_level, y=training_hours, fill=education_level))
p1 <- p1 + geom_bar(stat="identity", width=0.5, )+ geom_point(color="#f2f2f2",size=1)+
ggtitle('Differences in education level during training time')+
labs(x='Education Level',  y='Training Hours')+
scale_y_continuous(limits = c(0,350), breaks = seq(0,350,by=50))+
scale_fill_manual(values=c("Graduate"="#d66d75","Masters"="#ee9ca7","Phd"="#ffdde1"))+
theme_bw()+theme(panel.grid=element_blank(),panel.border=element_blank(),axis.line=element_line(size=1,colour="black"))
# Here comes the gganimate code, convert a static diagram to a motion diagram
anim1.0<-p1.0 + transition_states(education_level) +
labs(title = "training_hours: {frame_time}") +
shadow_wake(wake_length = 0.1, alpha = FALSE)
animate(anim1.0)
anim_save(filename = 'anim3.gif',
path = 'C:/Users/谢雅婷/Desktop/R-project-PSY6422-Assignment/figs')
#save the git into the folder
anim1.1<-p1.1 + transition_states(gender) +
labs(title = "training_hours: {frame_time}") +
shadow_wake(wake_length = 0.1, alpha = FALSE)
animate(anim1.1)
anim_save(filename = 'anim3.gif',
path = 'C:/Users/谢雅婷/Desktop/R-project-PSY6422-Assignment/figs')
#Make the two figures side by side
grid.arrange(p1.0, p1.1, ncol=1)
knitr::opts_chunk$set(echo = TRUE,warning = FALSE)
options(tinytex.verbose = TRUE)
```
#Load the installation packages that need to use
library(ggplot2)
library(gridExtra)
library(gganimate)
library(gifski)
library(av)
#make a plot
p1.0 <- ggplot(data=df5.target0, aes(x=education_level, y=training_hours, fill=education_level))
p1.0 <- p1.0 + geom_bar(stat="identity", width=0.5, )+ geom_point(color="#f2f2f2",size=1)+
ggtitle('Differences in education level during training time')+
labs(x='Education Level',  y='Training Hours')+
scale_y_continuous(limits = c(0,350), breaks = seq(0,350,by=50))+
scale_fill_manual(values=c("Graduate"="#d66d75","Masters"="#ee9ca7","Phd"="#ffdde1"))+
theme_bw()+theme(panel.grid=element_blank(),panel.border=element_blank(),axis.line=element_line(size=1,colour="black"))
p1.1 <- ggplot(data=df5.target1, aes(x=education_level, y=training_hours, fill=education_level))
p1.1 <- p1.1 + geom_bar(stat="identity", width=0.5, )+ geom_point(color="#f2f2f2",size=1)+
ggtitle('Differences in education level during training time')+
labs(x='Education Level',  y='Training Hours')+
scale_y_continuous(limits = c(0,350), breaks = seq(0,350,by=50))+
scale_fill_manual(values=c("Graduate"="#d66d75","Masters"="#ee9ca7","Phd"="#ffdde1"))+
theme_bw()+theme(panel.grid=element_blank(),panel.border=element_blank(),axis.line=element_line(size=1,colour="black"))
# Here comes the gganimate code, convert a static diagram to a motion diagram
anim1.0<-p1.0 + transition_states(education_level) +
labs(title = "training_hours: {frame_time}") +
shadow_wake(wake_length = 0.1, alpha = FALSE)
animate(anim1.0)
anim_save(filename = 'anim3.gif',
path = 'C:/Users/谢雅婷/Desktop/R-project-PSY6422-Assignment/figs')
#save the git into the folder
anim1.1<-p1.1 + transition_states(gender) +
labs(title = "training_hours: {frame_time}") +
shadow_wake(wake_length = 0.1, alpha = FALSE)
animate(anim1.1)
anim_save(filename = 'anim3.gif',
path = 'C:/Users/谢雅婷/Desktop/R-project-PSY6422-Assignment/figs')
#Make the two figures side by side
grid.arrange(p1.0, p1.1, ncol=1)
#Load the installation packages that need to use
library(ggplot2)
library(gridExtra)
library(gganimate)
library(gifski)
library(av)
#make a plot
p2.0 <- ggplot(data=df5.target0, aes(x=gender, y=training_hours, fill=gender))
p2.0 <- p2.0 + geom_bar(stat="identity", width=0.5, )+ geom_point(color="#e6dada",size=1)+
ggtitle('Differences in gender during training time')+
labs(x='Gender',  y='Training Hours')+
scale_y_continuous(limits = c(0,350), breaks = seq(0,350,by=50))+
scale_fill_manual(values=c("Female"="#859398","Male"="#bdc3c7","Other"="#eef2f3"))+
theme_bw()+theme(panel.grid=element_blank(),panel.border=element_blank(),axis.line=element_line(size=1,colour="black"))
p2.1 <- ggplot(data=df5.target1, aes(x=gender, y=training_hours, fill=gender))
p2.1 <- p2.1 + geom_bar(stat="identity", width=0.5, )+ geom_point(color="#e6dada",size=1)+
ggtitle('Differences in gender during training time')+
labs(x='Gender',  y='Training Hours')+
scale_y_continuous(limits = c(0,350), breaks = seq(0,350,by=50))+
scale_fill_manual(values=c("Female"="#859398","Male"="#bdc3c7","Other"="#eef2f3"))+
theme_bw()+theme(panel.grid=element_blank(),panel.border=element_blank(),axis.line=element_line(size=1,colour="black"))
# Here comes the gganimate code, convert a static diagram to a motion diagram
anim2.0<-p2.0 + transition_states(gender) +
labs(title = "training_hours: {frame_time}") +
shadow_wake(wake_length = 0.1, alpha = FALSE)
animate(anim2.0)
anim_save(filename = 'anim2.0.gif',
path = 'C:/Users/谢雅婷/Desktop/R-project-PSY6422-Assignment/figs')
anim2.1<-p2.1 + transition_states(gender) +
labs(title = "training_hours: {frame_time}") +
shadow_wake(wake_length = 0.1, alpha = FALSE)
animate(anim2.1)
anim_save(filename = 'anim2.1.gif',
path = 'C:/Users/谢雅婷/Desktop/R-project-PSY6422-Assignment/figs')
#Make the two figures side by side
grid.arrange(p2.0, p2.1, ncol=1)
#Load the installation packages that need to use
library(ggplot2)
library(gridExtra)
library(gganimate)
library(gifski)
library(av)
#make a plot
p1.0 <- ggplot(data=df5.target0, aes(x=education_level, y=training_hours, fill=education_level))
p1.0 <- p1.0 + geom_bar(stat="identity", width=0.5, )+ geom_point(color="#f2f2f2",size=1)+
ggtitle('New employees willing to stay: the relationship between training duration and education')+
labs(x='Education Level',  y='Training Hours')+
scale_y_continuous(limits = c(0,350), breaks = seq(0,350,by=50))+
scale_fill_manual(values=c("Graduate"="#d66d75","Masters"="#ee9ca7","Phd"="#ffdde1"))+
theme_bw()+theme(panel.grid=element_blank(),
panel.border=element_blank(),
axis.line=element_line(size=1,colour="gray"))
p1.1 <- ggplot(data=df5.target1, aes(x=education_level, y=training_hours, fill=education_level))
p1.1 <- p1.1 + geom_bar(stat="identity", width=0.5, )+ geom_point(color="#f2f2f2",size=1)+
ggtitle('New employees wishing to leave: the relationship between training duration and education')+
labs(x='Education Level',  y='Training Hours')+
scale_y_continuous(limits = c(0,350), breaks = seq(0,350,by=50))+
scale_fill_manual(values=c("Graduate"="#d66d75","Masters"="#ee9ca7","Phd"="#ffdde1"))+
theme_bw()+theme(panel.grid=element_blank(),
panel.border=element_blank(),
axis.line=element_line(size=1,colour="gray"))
# Here comes the gganimate code, convert a static diagram to a motion diagram
anim1.0<-p1.0 + transition_states(education_level) +
labs(title = "training_hours: {frame_time}") +
shadow_wake(wake_length = 0.1, alpha = FALSE)
animate(anim1.0)
anim_save(filename = 'anim1.0.gif',
path = 'C:/Users/谢雅婷/Desktop/R-project-PSY6422-Assignment/figs')
#save the git into the folder
anim1.1<-p1.1 + transition_states(gender) +
labs(title = "training_hours: {frame_time}") +
shadow_wake(wake_length = 0.1, alpha = FALSE)
animate(anim1.1)
anim_save(filename = 'anim1.1.gif',
path = 'C:/Users/谢雅婷/Desktop/R-project-PSY6422-Assignment/figs')
#Make the two figures side by side
grid.arrange(p1.0, p1.1, ncol=1)
#Load the installation packages that need to use
library(ggplot2)
library(gridExtra)
library(gganimate)
library(gifski)
library(av)
#make a plot
p1.0 <- ggplot(data=df5.target0, aes(x=education_level, y=training_hours, fill=education_level))
p1.0 <- p1.0 + geom_bar(stat="identity", width=0.5, )+ geom_point(color="#f2f2f2",size=1)+
ggtitle('New employees willing to stay')+
subtitle('the relationship between training duration and education')+
labs(x='Education Level',  y='Training Hours')+
scale_y_continuous(limits = c(0,350), breaks = seq(0,350,by=50))+
scale_fill_manual(values=c("Graduate"="#d66d75","Masters"="#ee9ca7","Phd"="#ffdde1"))+
theme_bw()+theme(panel.grid=element_blank(),
panel.border=element_blank(),
axis.line=element_line(size=1,colour="gray"))
#Load the installation packages that need to use
library(ggplot2)
library(gridExtra)
library(gganimate)
library(gifski)
library(av)
#make a plot
p1.0 <- ggplot(data=df5.target0, aes(x=education_level, y=training_hours, fill=education_level))
p1.0 <- p1.0 + geom_bar(stat="identity", width=0.5, )+ geom_point(color="#f2f2f2",size=1)+
ggtitle('New employees willing to stay')+
ggsubtitle('the relationship between training duration and education')+
labs(x='Education Level',  y='Training Hours')+
scale_y_continuous(limits = c(0,350), breaks = seq(0,350,by=50))+
scale_fill_manual(values=c("Graduate"="#d66d75","Masters"="#ee9ca7","Phd"="#ffdde1"))+
theme_bw()+theme(panel.grid=element_blank(),
panel.border=element_blank(),
axis.line=element_line(size=1,colour="gray"))
#Load the installation packages that need to use
library(ggplot2)
library(gridExtra)
library(gganimate)
library(gifski)
library(av)
#make a plot
p1.0 <- ggplot(data=df5.target0, aes(x=education_level, y=training_hours, fill=education_level))
p1.0 <- p1.0 + geom_bar(stat="identity", width=0.5, )+ geom_point(color="#f2f2f2",size=1)+
ggtitle('New employees willing to stay')+
labs(subtitle="the relationship between training duration and education",
x='Education Level',  y='Training Hours')+
scale_y_continuous(limits = c(0,350), breaks = seq(0,350,by=50))+
scale_fill_manual(values=c("Graduate"="#d66d75","Masters"="#ee9ca7","Phd"="#ffdde1"))+
theme_bw()+theme(panel.grid=element_blank(),
panel.border=element_blank(),
axis.line=element_line(size=1,colour="gray"))
p1.1 <- ggplot(data=df5.target1, aes(x=education_level, y=training_hours, fill=education_level))
p1.1 <- p1.1 + geom_bar(stat="identity", width=0.5, )+ geom_point(color="#f2f2f2",size=1)+
ggtitle('New employees wishing to leave: the relationship between training duration and education')+
labs(x='Education Level',  y='Training Hours')+
scale_y_continuous(limits = c(0,350), breaks = seq(0,350,by=50))+
scale_fill_manual(values=c("Graduate"="#d66d75","Masters"="#ee9ca7","Phd"="#ffdde1"))+
theme_bw()+theme(panel.grid=element_blank(),#Set the background color and grid
panel.border=element_blank(),
axis.line=element_line(size=1,colour="gray")) #Set the thickness of the axis and the color of the axis
# Here comes the gganimate code, convert a static diagram to a motion diagram
anim1.0<-p1.0 + transition_states(education_level) +
labs(title = "training_hours: {frame_time}") +
shadow_wake(wake_length = 0.1, alpha = FALSE)
animate(anim1.0)
anim_save(filename = 'anim1.0.gif',
path = 'C:/Users/谢雅婷/Desktop/R-project-PSY6422-Assignment/figs')
#save the git into the folder
anim1.1<-p1.1 + transition_states(gender) +
labs(title = "training_hours: {frame_time}") +
shadow_wake(wake_length = 0.1, alpha = FALSE)
animate(anim1.1)
anim_save(filename = 'anim1.1.gif',
path = 'C:/Users/谢雅婷/Desktop/R-project-PSY6422-Assignment/figs')
#Make the two figures side by side
grid.arrange(p1.0, p1.1, ncol=1)
library(ggplot2)
#Rearrange the X-axis coordinates in the generated chart
df5.target0$company_size <- factor(df1$company_size,levels=c("<10","10/49","50-99","100-500","500-999","1000-4999","5000-9999","10000+"))
library(ggplot2)
#Rearrange the X-axis coordinates in the generated chart
df5.target0$company_size <- factor(df5.target0$company_size,levels=c("<10","10/49","50-99","100-500","500-999","1000-4999","5000-9999","10000+"))
df5.target1$company_size <- factor(df5.target1$company_size,levels=c("<10","10/49","50-99","100-500","500-999","1000-4999","5000-9999","10000+"))
#make scatter charts
p4.0 <- ggplot(data=df5.target0,aes(x=company_size,y=training_hours,color=company_size))
p4.0 + geom_point(size=3) +
ggtitle("New employees willing to stay") +
labs(subtitle = "The relationship between company size and traning hours",
x='Company Size',  y='Training Hours')
p4.1 <- ggplot(data=df5.target1,aes(x=company_size,y=training_hours,color=company_size))
p4.1 + geom_point(size=3) +
ggtitle("New employees wishing to leave") +
labs(subtitle = "The relationship between company size and traning hours",
x='Company Size',  y='Training Hours')
library(tidyverse)
#After sorting out the original data set, a new simplified data set is created for graph drawing
df5 <- df1 %>% select(target,gender,education_level,company_size,experience,training_hours)
#Create a dataset with a target value of 1
df5.target1 <- df5 %>% group_by(target) %>%
filter(target==1)
#Create a dataset with a target value of 0
df5.target0 <- df5 %>% group_by(target) %>%
filter(target==0)
#Load the installation packages that need to use
library(ggplot2)
library(gridExtra)
library(gganimate)
library(gifski)
library(av)
#make a plot
p1.0 <- ggplot(data=df5.target0, aes(x=education_level, y=training_hours, fill=education_level))
p1.0 <- p1.0 + geom_bar(stat="identity", width=0.5, )+ geom_point(color="#f2f2f2",size=1)+
ggtitle('New employees willing to stay')+
labs(subtitle="the relationship between training duration and education",
x='Education Level',  y='Training Hours')+
scale_y_continuous(limits = c(0,350), breaks = seq(0,350,by=50))+
scale_fill_manual(values=c("Graduate"="#d66d75","Masters"="#ee9ca7","Phd"="#ffdde1"))+
theme_bw()+theme(panel.grid=element_blank(),
panel.border=element_blank(),
axis.line=element_line(size=1,colour="gray"))
p1.1 <- ggplot(data=df5.target1, aes(x=education_level, y=training_hours, fill=education_level))
p1.1 <- p1.1 + geom_bar(stat="identity", width=0.5, )+ geom_point(color="#f2f2f2",size=1)+
ggtitle('New employees wishing to leave')+
labs(subtitle="the relationship between training duration and education",
x='Education Level',  y='Training Hours')+
scale_y_continuous(limits = c(0,350), breaks = seq(0,350,by=50))+
scale_fill_manual(values=c("Graduate"="#d66d75","Masters"="#ee9ca7","Phd"="#ffdde1"))+
theme_bw()+theme(panel.grid=element_blank(),#Set the background color and grid
panel.border=element_blank(),
axis.line=element_line(size=1,colour="gray")) #Set the thickness of the axis and the color of the axis
# Here comes the gganimate code, convert a static diagram to a motion diagram
anim1.0<-p1.0 + transition_states(education_level) +
labs(title = "training_hours: {frame_time}") +
shadow_wake(wake_length = 0.1, alpha = FALSE)
animate(anim1.0)
anim_save(filename = 'anim1.0.gif',
path = 'C:/Users/谢雅婷/Desktop/R-project-PSY6422-Assignment/figs')
#save the git into the folder
anim1.1<-p1.1 + transition_states(gender) +
labs(title = "training_hours: {frame_time}") +
shadow_wake(wake_length = 0.1, alpha = FALSE)
animate(anim1.1)
anim_save(filename = 'anim1.1.gif',
path = 'C:/Users/谢雅婷/Desktop/R-project-PSY6422-Assignment/figs')
#Make the two figures side by side
grid.arrange(p1.0, p1.1, ncol=1)
#Load the installation packages that need to use
library(ggplot2)
library(gridExtra)
library(gganimate)
library(gifski)
library(av)
#make a plot
p2.0 <- ggplot(data=df5.target0, aes(x=gender, y=training_hours, fill=gender))
p2.0 <- p2.0 + geom_bar(stat="identity", width=0.5, )+ geom_point(color="#e6dada",size=1)+
ggtitle('New employees willing to stay')+
labs(subtitle="the relationship between training duration and gender",
x='Gender',  y='Training Hours')+
scale_y_continuous(limits = c(0,350), breaks = seq(0,350,by=50))+
scale_fill_manual(values=c("Female"="#859398","Male"="#bdc3c7","Other"="#eef2f3"))+
#Set each value bar on the x-axis to show a different color
theme_bw()+theme(panel.grid=element_blank(),
panel.border=element_blank(),
axis.line=element_line(size=1,colour="black"))
p2.1 <- ggplot(data=df5.target1, aes(x=gender, y=training_hours, fill=gender))
p2.1 <- p2.1 + geom_bar(stat="identity", width=0.5, )+ geom_point(color="#e6dada",size=1)+
#Set the size and color of the scattered points
ggtitle('New employees wishing to leave')+
labs(subtitle="the relationship between training duration and gender",
x='Gender',  y='Training Hours')+
scale_y_continuous(limits = c(0,350), breaks = seq(0,350,by=50))+
scale_fill_manual(values=c("Female"="#859398","Male"="#bdc3c7","Other"="#eef2f3"))+
theme_bw()+theme(panel.grid=element_blank(),
panel.border=element_blank(),
axis.line=element_line(size=1,colour="black"))
# Here comes the gganimate code, convert a static diagram to a motion diagram
anim2.0<-p2.0 + transition_states(gender) +
labs(title = "training_hours: {frame_time}") +
shadow_wake(wake_length = 0.1, alpha = FALSE)
animate(anim2.0)
anim_save(filename = 'anim2.0.gif',
path = 'C:/Users/谢雅婷/Desktop/R-project-PSY6422-Assignment/figs')
anim2.1<-p2.1 + transition_states(gender) +
labs(title = "training_hours: {frame_time}") +
shadow_wake(wake_length = 0.1, alpha = FALSE)
animate(anim2.1)
anim_save(filename = 'anim2.1.gif',
path = 'C:/Users/谢雅婷/Desktop/R-project-PSY6422-Assignment/figs')
#Make the two figures side by side
grid.arrange(p2.0, p2.1, ncol=1)
library(ggplot2)
#Rearrange the X-axis coordinates in the generated chart
df5.target0$experience <- factor(df5.target0$experience,levels=c("<1","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20",">20"))
df5.target1$experience <- factor(df5.target1$experience,levels=c("<1","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20",">20"))
#make scatter charts
p3.0 <- ggplot(data=df1,aes(x=experience,y=training_hours,color=experience))
p3.0 + geom_point(size=1) +
ggtitle("New employees willing to stay") +
labs(subtitle = "The relationship between work experience and traning hours",
x='work experience',  y='Training Hours') # add theme and X - and Y-axis titles and subtitle
p3.1 <- ggplot(data=df1,aes(x=experience,y=training_hours,color=experience))
p3.1 + geom_point(size=1) +
ggtitle("New employees wishing to leave") +
labs(subtitle = "The relationship between work experience and traning hours",
x='work experience',  y='Training Hours')
library(ggplot2)
#Rearrange the X-axis coordinates in the generated chart
df5.target0$experience <- factor(df5.target0$experience,levels=c("<1","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20",">20"))
df5.target1$experience <- factor(df5.target1$experience,levels=c("<1","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20",">20"))
#make scatter charts
p3.0 <- ggplot(data=df5.target0,aes(x=experience,y=training_hours,color=experience))
p3.0 + geom_point(size=1) +
ggtitle("New employees willing to stay") +
labs(subtitle = "The relationship between work experience and traning hours",
x='work experience',  y='Training Hours') # add theme and X - and Y-axis titles and subtitle
p3.1 <- ggplot(data=df5.target1,aes(x=experience,y=training_hours,color=experience))
p3.1 + geom_point(size=1) +
ggtitle("New employees wishing to leave") +
labs(subtitle = "The relationship between work experience and traning hours",
x='work experience',  y='Training Hours')
library(ggplot2)
#Use the factor function to change the default order of the image axis
df5.target0$company_size <- factor(df5.target0$company_size,levels=c("<10","10/49","50-99","100-500","500-999","1000-4999","5000-9999","10000+"))
df5.target1$company_size <- factor(df5.target1$company_size,levels=c("<10","10/49","50-99","100-500","500-999","1000-4999","5000-9999","10000+"))
#make scatter charts
p4.0 <- ggplot(data=df5.target0,aes(x=company_size,y=training_hours,color=company_size))
p4.0 + geom_point(size=3) +
ggtitle("New employees willing to stay") +
labs(subtitle = "The relationship between company size and traning hours",
x='Company Size',  y='Training Hours')
p4.1 <- ggplot(data=df5.target1,aes(x=company_size,y=training_hours,color=company_size))
p4.1 + geom_point(size=3) +
ggtitle("New employees wishing to leave") +
labs(subtitle = "The relationship between company size and traning hours",
x='Company Size',  y='Training Hours')
knitr::opts_chunk$set(echo = TRUE,warning = FALSE)
options(tinytex.verbose = TRUE)
knitr::include_graphics("C:/Users/谢雅婷/Desktop/R-project-PSY6422-Assignment/notes/Background_dimission.png")
#library(here)
#figure1<-here("notes","Background_dimission.png")
#knitr::include_graphics(figure1)
library(tidyverse)
library(here)
#load data
#aug_train <- read.csv(here("data","aug_train.csv"))
df1 <- read.csv("C:/Users/谢雅婷/Desktop/R-project-PSY6422-Assignment/data/aug_train.csv",na.strings = "")
class(df1) #Determine the nature of the add-in
sum(is.na(df1))
is.na(df1)  #null value judgment
which(is.na(df1),arr.ind = T)  #arr.ind=T can return the corresponding column and column coordinates of the missing value
df1<-na.omit(df1)  #The na.omit function can directly delete the line on which the value resides
#Rearrange the X-axis coordinates in the generated chart
df5.target0$experience <- factor(df5.target0$experience,levels=c("<1","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20",">20"))
library(ggplot2)
library(gridExtra)
#make a plot
p1.0 <- ggplot(data=df5.target0, aes(x=education_level, y=training_hours, fill=education_level))
p1.0 <- p1.0 + geom_bar(stat="identity", width=0.5, )+ geom_point(color="#f2f2f2",size=1)+
ggtitle('New employees willing to stay')+
labs(subtitle="the relationship between training duration and education",
x='Education Level',  y='Training Hours')+
scale_y_continuous(limits = c(0,350), breaks = seq(0,350,by=50))+
scale_fill_manual(values=c("Graduate"="#d66d75","Masters"="#ee9ca7","Phd"="#ffdde1"))+
theme_bw()+theme(panel.grid=element_blank(),
panel.border=element_blank(),
axis.line=element_line(size=1,colour="gray"))
p1.1 <- ggplot(data=df5.target1, aes(x=education_level, y=training_hours, fill=education_level))
p1.1 <- p1.1 + geom_bar(stat="identity", width=0.5, )+ geom_point(color="#f2f2f2",size=1)+
ggtitle('New employees wishing to leave')+
labs(subtitle="the relationship between training duration and education",
x='Education Level',  y='Training Hours')+
scale_y_continuous(limits = c(0,350), breaks = seq(0,350,by=50))+
scale_fill_manual(values=c("Graduate"="#d66d75","Masters"="#ee9ca7","Phd"="#ffdde1"))+
theme_bw()+theme(panel.grid=element_blank(),#Set the background color and grid
panel.border=element_blank(),
axis.line=element_line(size=1,colour="gray")) #Set the thickness of the axis and the color of the axis
library(gganimate)
library(gifski)
library(av)
# Here comes the gganimate code, convert a static diagram to a motion diagram
anim1.0<-p1.0 + transition_states(education_level) +
labs(title = "training_hours: {frame_time}") +
shadow_wake(wake_length = 0.1, alpha = FALSE)
animate(anim1.0)
anim_save(filename = 'anim1.0.gif',
path = 'C:/Users/谢雅婷/Desktop/R-project-PSY6422-Assignment/figs')
#save the git into the folder
anim1.1<-p1.1 + transition_states(gender) +
labs(title = "training_hours: {frame_time}") +
shadow_wake(wake_length = 0.1, alpha = FALSE)
animate(anim1.1)
anim_save(filename = 'anim1.1.gif',
path = 'C:/Users/谢雅婷/Desktop/R-project-PSY6422-Assignment/figs')
#Make the two figures side by side
grid.arrange(p1.0, p1.1, ncol=1)
